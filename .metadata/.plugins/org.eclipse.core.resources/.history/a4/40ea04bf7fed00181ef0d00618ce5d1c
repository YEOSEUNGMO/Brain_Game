package ass;

import java.awt.event.*;
import java.util.*;

public class MatchingGame_buttonEvent implements ActionListener
{
	MatchingGame_cardButton[] button;
	
	int index;	// 카드 번호(이름)될 변수
	int checkCount; 	// 카드 비교에 사용
	int matchPoint, maxPoint; // 카드를 맞출 때마다 카운트 상승, maxPoint와 값이 같아지면 게임 승리
	final int matchNumber = 2;
	int cardIndex1, cardIndex2, cardImage1, cardImage2; // 배열이 안먹혀서 각각 만들어줌, cardIndex = 카드번호(이름), cardImage = 이미지값
	boolean[] cardIndex;
	public static boolean flag = false;	// 패키지 내에서 전부 사용 가능, false로 설정 후 cardButton 클래스에서 설정된 시간 이후 true로 변경
 	
	// 카드버튼의 클래스와 짝 맞추기게임의 클래스를 불러옴
	public MatchingGame_buttonEvent(MatchingGame_cardButton[] cardButton)
	{
		button = cardButton;
		checkCount = 0;
		matchPoint = 0;	
		maxPoint = MatchingGame.gameCard / matchNumber;	// 16 / 2 = 8
		cardIndex = new boolean[MatchingGame.gameCard];
	}

	// 이벤트
	public void actionPerformed(ActionEvent e) 
	{
		// getActionCommand()는 컴포넌트의 텍스트값을 저장합니다. 카드의 번호를 텍스트값으로 받아와 int형으로 변환하여 사용하였습니다
		index = Integer.parseInt(e.getActionCommand());
		
		if(!cardIndex[index] && flag)	// 선택된 카드의 체크가 안되어 있을 경우 작동 (카드가 뒷면일 경우), 카드 이미지 비교가 끝났을 때
		{
			
			if(checkCount == 0)
			{
				cardIndex1 = index;
				cardImage1 = button[index].clickButton();
			}
		
			if(checkCount == 1)
			{
				cardIndex2 = index;
				cardImage2 = button[index].clickButton();
				flag = false;	// 시간 차를 이용해 카드 이미지 비교가 끝나기 전까지 다음 버튼이 작동 안하도록 함
				
				if(cardImage1 != cardImage2)
				{
					Timer timer = new Timer();
					TimerTask timerTask = new TimerTask()
					{
						public void run()
						{
							button[cardIndex1].returnImage();
							button[cardIndex2].returnImage();
							flag = true;	// 카드이미지 리턴 후에는 다음 버튼 선택 가능
						}
					};
					
					timer.schedule(timerTask, 500);
				}
				else
				{
					matchPoint++;	// 짝이 맞을 때 마다 값 증가
					cardIndex[cardIndex1] = true;
					cardIndex[cardIndex2] = true;
					flag = true;
					
					if(matchPoint == maxPoint)	// 짝이 8개 다 맞았을 경우
					{
						

						
					}
				}
			}
		
	
			checkCount++;
		
			if(checkCount == 2)
			{
				checkCount = 0;
			}
			
		}
		
	}
	
	
}
